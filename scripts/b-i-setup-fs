#!/bin/bash

/bin/mount --bind /dev /target/dev
/bin/mount --bind /dev/pts /target/dev/pts
/bin/mount --bind /proc /target/proc
/bin/mount --bind /sys /target/sys

set -e

PATH=$PATH:/usr/sbin:/usr/bin

function do_chroot() {
    chroot /target /usr/bin/env PATH=$PATH $@ 
}

rm -f $ROOTFS/target/etc/fstab

###### REMOVE PACKAGES

P=""
if [ -f $ROOTFS/lib/live/mount/medium/live/packages-to-remove ];then
    for i in `cat $ROOTFS/lib/live/mount/medium/live/packages-to-remove`;do
        P="$P $i"
    done
    echo "Removing packages: $P"
fi

if [ "x$P" != "x" ];then
    do_chroot /usr/bin/apt-get --yes purge $P
fi

echo "Updating initramfs"
do_chroot /usr/sbin/update-initramfs -k all -u

echo "Removing unused packages"
do_chroot /usr/bin/apt-get --yes autoremove

echo "Clean up packaging system"
do_chroot /usr/bin/apt-get --yes clean 

###### USER

read AUTOLOGIN USERNAME < $ROOTFS/tmp/user-setup
echo "Configuring user $USERNAME"
echo "Auto-login: $AUTOLIGIN"
echo "LOG ========================== 1"
rm -f $ROOTFS/tmp/user-setup
USER_GROUPS=sudo,cdrom,floppy,audio,dip,video,plugdev,scanner,netdev,bluetooth
do_chroot /usr/sbin/useradd -G $USER_GROUPS -m -s /bin/bash $USERNAME

do_chroot /usr/sbin/chpasswd $USERNAME < $ROOTFS/tmp/user-pass
do_chroot /usr/bin/chfn < $ROOTFS/tmp/user-info
rm -f $ROOTFS/tmp/user-pass
echo "LOG ========================== 2"

###### AUTOLOGIN

if [ "$AUTOLOGIN" = "1" ];then
    if [ -s $ROOTFS/target/var/lib/dpkg/info/lightdm.list ];then
        sed -i -r -e "s/autologin-user=blankon/autologin-user=$USERNAME/g" $ROOTFS/target/usr/share/lightdm/lightdm.conf.d/40-lightdm-webkit-greeter.conf
        if [ ! -s $ROOTFS/target/etc/pam.d/lightdm-autologin ];then
            cat << @@EOF > $ROOTFS/target/etc/pam.d/lightdm-autologin
auth requisite pam_nologin.so
auth required pam_env.so readenv=1
auth required pam_env.so readenv=1 envfile=/etc/default/locale
auth    required    pam_succeed_if.so user != root quiet_success
auth required pam_permit.so
@include common-account
session required pam_limits.so
@include common-session
@include common-password
@@EOF
        fi
    fi
else 
    sed -i -r -e "s/autologin-/#autologin-/g" $ROOTFS/target/usr/share/lightdm/lightdm.conf.d/40-lightdm-webkit-greeter.conf

fi
echo "LOG ========================== 3"
###### HOSTNAME

read HOSTNAME < $ROOTFS/tmp/hostname
echo "Setting up hostname $HOSTNAME"
mv $ROOTFS/tmp/hostname $ROOTFS/target/etc/
    cat << @@EOF > $ROOTFS/target/etc/hosts 
127.0.0.1   localhost $HOSTNAME

# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
@@EOF

echo "LOG ========================== 4"
###### Locale
if [ -f /run/locale ];then
    cp /run/locale /target/etc/default/
fi
echo "LOG ========================== 5"

###### Timezone
cp -f $ROOTFS/etc/localtime $ROOTFS/target/etc/localtime

###### Repository

if [ -f $ROOTFS/usr/share/blankon-repository-setup/sources.list ];then
    cp -f $ROOTFS/usr/share/blankon-repository-setup/sources.list $ROOTFS/target/etc/apt/ 
fi

if [ -f $ROOTFS/target/etc/apt/sources.list.d/local.list ];then
    rm -f $ROOTFS/target/etc/apt/sources.list.d/local.list
fi

###### HOME

if [ -f /tmp/fstab ];then
    mv /tmp/fstab /target/etc/fstab
fi


###### Swap

#for i in `cat $ROOTFS/tmp/swaps`;do
#    mkswap $i
#    echo "$i    none    swap    sw  0   0" >> $ROOTFS/target/etc/fstab
#done


###### OpenSSH server
if [ -e $ROOTFS/target/var/lib/dpkg/info/openssh-server.postinst ]; then
    echo "Restarting openssh server"
    if ! ls $ROOTFS/target/etc/ssh/ssh_host_*_key > /dev/null 2>&1; then
        do_chroot /usr/sbin/dpkg-reconfigure --no-reload openssh-server
    fi
fi


###### Write installation-id.txt file
touch $ROOTFS/target/etc/installation-id.txt
DIST=$(lsb_release -c | tail -1 | sed -e 's/:/\n/g' | tail -1 | sed -e 's/^[[:space:]]*//');
ARCH=$(uname -m);
UUID=$(uuidgen); 
echo "$DIST-$ARCH-$UUID" >> $ROOTFS/target/etc/installation-id.txt
