#!/bin/bash

set -e

# If this is an EFI system, this script will be called with two parameters,
# being the first is the installation device and the second is the EFI partition,
# otherwise, only first parameter is given

DEVICE=$1
EFI_PARTITION=$2
NEED_FORMAT=$3

if [ -z "$DEVICE" ];then
    echo "No device given"
    exit 1
fi

# We don't have PATH within script execution yet dpkg requires it
# So we set it here
export PATH=/bin:/usr/bin:/sbin 

grep -v GRUB_CMDLINE_LINUX_DEFAULT /etc/default/grub > /tmp/grub
mv /tmp/grub /target/etc/default/grub

if [ -f /tmp/pass ];
then
    # The GRUB_DISABLE_SUBMENY=y fix broken grub.cfg generation
    cat << @@EOF >> /target/etc/default/grub
GRUB_CMDLINE_LINUX_DEFAULT="rw quiet splash cryptopts=target=root,source=/dev/lvm/root,lvm=root CRYPTSETUP=y"
GRUB_GFXPAYLOAD_LINUX=1024x768
GRUB_TIMEOUT=5
@@EOF

#GRUB_ENABLE_CRYPTODISK=y
#    echo /target/etc/default/grub /etc/default/grub
else
    cat << @@EOF >> /target/etc/default/grub
GRUB_CMDLINE_LINUX_DEFAULT="rw quiet splash"
GRUB_GFXPAYLOAD_LINUX=1024x768
@@EOF

fi

echo $EFI_PARTITION
if [ -z "$EFI_PARTITION" ];then
    if [ -f /tmp/pass ];then
        echo "Installing GRUB on separated boot partition"
        # The boot partition already prepared on b-i-setup-fs script.
        /usr/sbin/grub-install --recheck --root-directory=/target --boot-directory=/target/boot $DEVICE
    else
        echo "Installing GRUB"
        /usr/sbin/grub-install --recheck --root-directory=/target $DEVICE
    fi
else
    # If EFI_PARTITION was a false, then the instaler.vala has create one. Find it.
    if [ "x$EFI_PARTITION" = "xfalse" ];then
        echo "Find the EFI partition..."
        set +e
        EFI_PARTITION=`/sbin/fdisk -l $DEVICE 2> /dev/null | grep "EFI System" | cut -d" " -f1`
        echo "Found : $EFI_PARTITION"
        set -e
    fi
    # grub-efi must be available 
    apt-get --assume-yes install grub-efi
    mkdir -p /target/boot/efi
    if [ "x$NEED_FORMAT" = "xY" ];then
        echo "Formatting EFI partition..."
        /sbin/mkfs.fat -F 32 $EFI_PARTITION
    fi

    BOOT_TARGET=""
    if [ -f /tmp/pass ];then
        # Format the efi partition
        /sbin/mkfs.fat -F 32 $EFI_PARTITION
        echo "Secure installation has separated boot partition"
        # The boot partition already prepared on b-i-setup-fs script.
        BOOT_TARGET="--boot-directory=/target/boot"
    fi
    mount $EFI_PARTITION /target/boot/efi
    OPT="--recheck --bootloader-id=Xecure --efi-directory=/target/boot/efi --root-directory=/target $BOOT_TARGET $DEVICE"
    # Expose it, for debugging purpose
    echo $OPT
    echo "Installing GRUB EFI"
    /usr/sbin/grub-install $OPT
    umount /target/boot/efi
fi
sudo chroot /target /usr/sbin/grub-mkconfig -o /boot/grub/grub.cfg 

echo "Updating initramfs"
PATH=$PATH:/usr/sbin:/usr/bin:/bin:/sbin
function do_chroot() {
    /usr/sbin/chroot $ROOTFS/target /usr/bin/env PATH=$PATH $@ 
}
# Clean the existing initrd(s)
do_chroot /bin/rm /boot/initrd*
# Create new fresh one
if [ -f /tmp/pass ];
then
    do_chroot CRYPTSETUP=y /usr/sbin/update-initramfs -c -k all
else
    do_chroot /usr/sbin/update-initramfs -c -k all
fi

